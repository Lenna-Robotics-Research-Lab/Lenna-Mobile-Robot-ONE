<launch>
 <node name="odom_publisher" pkg="lenna_teleop" type="nav_publisher.py" output="screen"/>
 <node name="odom_tf" pkg="lenna_teleop" type="odom_tf.py" output="screen"/>
 <node name="cmd_vel_sub" pkg="lenna_teleop" type="cmd_vel_subscriber.py" output="screen"/>
 <node name="teleop_twist" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen"/>

 <!-- ldldiar message publisher node -->
 <node name="LD19" pkg="ldlidar_stl_ros" type="ldlidar_stl_ros_node" output="screen" >
  <param name="product_name" value="LDLiDAR_LD19"/>
  <param name="topic_name" value="scan"/>
  <param name="port_name" value ="/dev/ttyUSB0"/>
  <param name="frame_id" value="base_laser"/>
  <!-- Set laser scan directon: -->
  <!--    1. Set counterclockwise, example: <param name="laser_scan_dir" type="bool" value="true"/> -->
  <!--    2. Set clockwise,        example: <param name="laser_scan_dir" type="bool" value="false"/> -->
  <param name="laser_scan_dir" type="bool" value="true"/>
  <!-- Angle crop setting, Mask data within the set angle range -->
  <!--    1. Enable angle crop fuction: -->
  <!--       1.1. enable angle crop,  example: <param name="enable_angle_crop_func" type="bool" value="true"/> -->
  <!--       1.2. disable angle crop, example: <param name="enable_angle_crop_func" type="bool" value="false"/> -->
  <param name="enable_angle_crop_func" type="bool" value="false"/>
  <!--    2. Angle cropping interval setting, The distance and intensity data within the set angle range will be set to 0 --> 
  <!--       angle >= "angle_crop_min" and angle <= "angle_crop_max", unit is degress -->
  <param name="angle_crop_min" type="double" value="135.0"/>
  <param name="angle_crop_max" type="double" value="225.0"/>
 </node>
 <!-- ldlidar message subscriber node -->
 <!-- node name="ListenLD19" pkg="ldlidar_stl_ros" type="ldlidar_stl_ros_listen_node" output="screen">
  <param name="topic_name" value="scan"/>
 </node -->
 <!-- publisher tf transform, parents frame is base_link, child frame is base_laser -->
 <!-- args="x y z yaw pitch roll parents_frame_id child_frame_id period_in_ms"-->

 <node pkg="slam_toolbox" type="async_slam_toolbox_node" name="slam_toolbox" output="screen">
  <rosparam command="load" file="$(find lenna_teleop)/config/mapper_params_online_async.yaml" />
 </node>

 <arg name="rvizconfig" default="$(find lenna_teleop)/rviz/lenna.rviz" />
 <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />

 <node name="base_to_laser" pkg="tf" type="static_transform_publisher"  args="0.0 0.0 0.0 0 0.0 0.0 base_link base_laser 50"/>
</launch>